{
  "version": 3,
  "sources": ["../../../app/routes/register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\register.tsx\");\n  import.meta.hot.lastModified = \"1750262831778.1572\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { storage, setFlash } from \"~/utils/session.server\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const username = formData.get(\"username\");\n  const res = await fetch(`${process.env.BACKEND_URL}/auth/register`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      username\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) {\n    return json({\n      error: data.message\n    });\n  }\n  const session = await storage.getSession();\n  setFlash(session, \"Account created successfully. Please log in.\");\n  return redirect(\"/login\", {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session)\n    }\n  });\n};\nexport default function Register() {\n  _s();\n  const actionData = useActionData();\n  return <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Register</h1>\r\n      {actionData?.error && <p className=\"text-red-600 mb-4\">{actionData.error}</p>}\r\n      <Form method=\"post\" className=\"space-y-4\">\r\n        <div>\r\n          <label>Email</label>\r\n          <input name=\"email\" type=\"email\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <div>\r\n          <label>Username</label>\r\n          <input name=\"username\" type=\"text\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input name=\"password\" type=\"password\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <button className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\">Register</button>\r\n      </Form>\r\n\r\n      <p className=\"mt-4 text-center\">\r\n        Already have an account?{\" \"}\r\n        <a href=\"/login\" className=\"text-blue-600 hover:underline\">Login here</a>\r\n      </p>\r\n    </div>;\n}\n_s(Register, \"fHVw5pq0Zwd2gXh2gyrnVdHnLCc=\", false, function () {\n  return [useActionData];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAC/B,qBAAkC;AAqC5B;AA3DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAsCe,SAAR,WAA4B;AACjC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,WAAU,wBAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,wBAAxC;AAAA;AAAA;AAAA;AAAA,WAAgD;AAAA,IAC/C,YAAY,SAAS,mDAAC,OAAE,WAAU,qBAAqB,qBAAW,SAA7C;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,IACzE,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,SACC;AAAA,2DAAC,WAAM,qBAAP;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,QACZ,mDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,UAAQ,MAAC,WAAU,+BAApD;AAAA;AAAA;AAAA;AAAA,eAAgF;AAAA,WAFlF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,WAAM,wBAAP;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACf,mDAAC,WAAM,MAAK,YAAW,MAAK,QAAO,UAAQ,MAAC,WAAU,+BAAtD;AAAA;AAAA;AAAA;AAAA,eAAkF;AAAA,WAFpF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,WAAM,wBAAP;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACf,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,UAAQ,MAAC,WAAU,+BAA1D;AAAA;AAAA;AAAA;AAAA,eAAsF;AAAA,WAFxF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,YAAO,WAAU,mDAAkD,wBAApE;AAAA;AAAA;AAAA;AAAA,aAA4E;AAAA,SAb9E;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAEA,mDAAC,OAAE,WAAU,oBAAmB;AAAA;AAAA,MACL;AAAA,MACzB,mDAAC,OAAE,MAAK,UAAS,WAAU,iCAAgC,0BAA3D;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,SAFvE;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,OAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
