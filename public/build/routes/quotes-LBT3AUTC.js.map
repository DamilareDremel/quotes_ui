{
  "version": 3,
  "sources": ["../../../app/routes/quotes.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\quotes.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\quotes.tsx\");\n  import.meta.hot.lastModified = \"1750286903139.233\";\n}\n// REMIX HMR END\n\nimport { useLoaderData, Link, Form } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getToken, getFlashSession, commitFlashSession } from \"~/utils/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const token = await getToken(request);\n  if (!token) return redirect(\"/login\");\n  const res = await fetch(`${process.env.BACKEND_URL}/quotes`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  const quotes = res.ok ? await res.json() : [];\n  const decodedPayload = JSON.parse(Buffer.from(token.split(\".\")[1], \"base64\").toString());\n  const userEmail = decodedPayload.email;\n  const userId = decodedPayload.userId;\n  const {\n    session,\n    message\n  } = await getFlashSession(request);\n  return json({\n    quotes,\n    token,\n    userEmail,\n    userId,\n    message\n  }, {\n    headers: {\n      \"Set-Cookie\": await commitFlashSession(session)\n    }\n  });\n};\nexport default function Quotes() {\n  _s();\n  const {\n    quotes,\n    userEmail,\n    userId,\n    message\n  } = useLoaderData();\n  return <div className=\"max-w-2xl mx-auto\">\r\n      <h1 className=\"text-3xl font-bold mb-4 text-black dark:text-gray-100\">Quotes</h1>\r\n\r\n      {message && <div className={`mb-4 p-3 rounded ${(() => {\n      const msg = message.trim().toLowerCase();\n      return msg.includes(\"deleted\") || msg.includes(\"logged out\") ? \"bg-red-100 text-red-700 dark:bg-red-900 dark:text-red-100\" : \"bg-green-100 text-green-700 dark:bg-green-900 dark:text-green-100\";\n    })()}`}>\r\n          {message}\r\n        </div>}\r\n\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <p className=\"text-gray-600 dark:text-gray-300\">Welcome, {userEmail}</p>\r\n        <Link to=\"/create-quote\" className=\"bg-green-600 text-white px-4 py-2 rounded\">Add New Quote</Link>\r\n      </div>\r\n\r\n      {quotes.length === 0 && <p className=\"text-gray-500 dark:text-gray-400\">No quotes available.</p>}\r\n\r\n      {quotes.map(quote => <div key={quote.id} className=\"border p-4 mb-2 rounded bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-700\">\r\n          <p className=\"text-black dark:text-gray-100\">{quote.text}</p>\r\n          <small className=\"text-gray-600 dark:text-gray-400\">by {quote.author ?? \"Anonymous\"}</small>\r\n\r\n          {quote.tags?.length > 0 && <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-2\">\r\n              Tags: {quote.tags.join(\", \")}\r\n            </p>}\r\n\r\n          {quote.userId === userId && <div className=\"flex space-x-3 mt-3\">\r\n              <Link to={`/edit-quote/${quote.id}`} className=\"text-blue-600 dark:text-blue-400 hover:underline\">Edit</Link>\r\n              <Form method=\"post\" action=\"/delete-quote\">\r\n                <input type=\"hidden\" name=\"id\" value={quote.id} />\r\n                <button type=\"submit\" className=\"text-red-600 dark:text-red-400 hover:underline\">Delete</button>\r\n              </Form>\r\n            </div>}\r\n        </div>)}\r\n    </div>;\n}\n_s(Quotes, \"OcMVZ5UtuesIOuE0GrX4yIO6TbY=\", false, function () {\n  return [useLoaderData];\n});\n_c = Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
