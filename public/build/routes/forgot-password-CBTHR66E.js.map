{
  "version": 3,
  "sources": ["../../../app/routes/forgot-password.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\forgot-password.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\forgot-password.tsx\");\n  import.meta.hot.lastModified = \"1750262789087.1113\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData } from \"@remix-run/react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { useEffect } from \"react\";\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const newPassword = formData.get(\"newPassword\");\n  const res = await fetch(`${process.env.BACKEND_URL}/auth/reset-password`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      newPassword\n    })\n  });\n  const data = await res.json();\n  if (!res.ok) {\n    return json({\n      error: data.message\n    });\n  }\n  return redirect(\"/login?message=Password successfully updated\");\n};\nexport default function ResetPassword() {\n  _s();\n  const actionData = useActionData();\n  useEffect(() => {\n    if (typeof window !== \"undefined\" && actionData?.success) {\n      const timer = setTimeout(() => {\n        window.location.href = \"/login\";\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [actionData]);\n  return <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Reset Password</h1>\r\n\r\n      {actionData?.error && <p className=\"text-red-600 mb-4\">{actionData.error}</p>}\r\n\r\n      {actionData?.success && <p className=\"text-green-600 mb-4\">\r\n          {actionData.success} Redirecting to login...\r\n        </p>}\r\n\r\n      <Form method=\"post\" className=\"space-y-4\">\r\n        <div>\r\n          <label>Email</label>\r\n          <input name=\"email\" type=\"email\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <div>\r\n          <label>New Password</label>\r\n          <input name=\"newPassword\" type=\"password\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <button className=\"bg-blue-600 text-white px-4 py-2 rounded w-full\">\r\n          Update Password\r\n        </button>\r\n      </Form>\r\n    </div>;\n}\n_s(ResetPassword, \"PRDjjkJaMryQ6wxX5PsbqQjqVos=\", false, function () {\n  return [useActionData];\n});\n_c = ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAC/B,IAAAA,gBAA0B;AAqCpB;AA3DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2CAA6C,EAAE;AAAA,EACxF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAkC;AAClC,cAAY,IAAI,eAAe;AACjC;AA8Be,SAAR,gBAAiC;AACtC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,+BAAU,MAAM;AACd,QAAI,OAAO,WAAW,eAAe,YAAY,SAAS;AACxD,YAAM,QAAQ,WAAW,MAAM;AAC7B,eAAO,SAAS,OAAO;AAAA,MACzB,GAAG,GAAI;AACP,aAAO,MAAM,aAAa,KAAK;AAAA,IACjC;AAAA,EACF,GAAG,CAAC,UAAU,CAAC;AACf,SAAO,mDAAC,SAAI,WAAU,wBAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,8BAAxC;AAAA;AAAA;AAAA;AAAA,WAAsD;AAAA,IAErD,YAAY,SAAS,mDAAC,OAAE,WAAU,qBAAqB,qBAAW,SAA7C;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,IAExE,YAAY,WAAW,mDAAC,OAAE,WAAU,uBAChC;AAAA,iBAAW;AAAA,MAAQ;AAAA,SADA;AAAA;AAAA;AAAA;AAAA,WAEtB;AAAA,IAEF,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,SACC;AAAA,2DAAC,WAAM,qBAAP;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,QACZ,mDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,UAAQ,MAAC,WAAU,+BAApD;AAAA;AAAA;AAAA;AAAA,eAAgF;AAAA,WAFlF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,WAAM,4BAAP;AAAA;AAAA;AAAA;AAAA,eAAmB;AAAA,QACnB,mDAAC,WAAM,MAAK,eAAc,MAAK,YAAW,UAAQ,MAAC,WAAU,+BAA7D;AAAA;AAAA;AAAA;AAAA,eAAyF;AAAA,WAF3F;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,YAAO,WAAU,mDAAkD,+BAApE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,OArBG;AAAA;AAAA;AAAA;AAAA,SAsBL;AACJ;AACA,GAAG,eAAe,gCAAgC,OAAO,WAAY;AACnE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
