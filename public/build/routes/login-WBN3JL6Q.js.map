{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.tsx\");\n  import.meta.hot.lastModified = \"1750262798083.6128\";\n}\n// REMIX HMR END\n\nimport { Form, useActionData, useLoaderData, useSearchParams } from \"@remix-run/react\";\nimport { redirect, json } from \"@remix-run/node\";\nimport { storage, getFlashSession, commitFlashSession } from \"~/utils/session.server\";\nexport const loader = async ({\n  request\n}) => {\n  const {\n    session,\n    message\n  } = await getFlashSession(request);\n  return json({\n    message\n  }, {\n    headers: {\n      \"Set-Cookie\": await commitFlashSession(session)\n    }\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const res = await fetch(`${process.env.BACKEND_URL}/auth/login`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (!res.ok) {\n    return json({\n      error: \"Invalid email or password. Please try again.\"\n    }, {\n      status: 400\n    });\n  }\n  const data = await res.json();\n  const session = await storage.getSession();\n  session.set(\"token\", data.token);\n  session.flash(\"flash\", \"Login successful!\");\n  return redirect(\"/quotes\", {\n    headers: {\n      \"Set-Cookie\": await storage.commitSession(session)\n    }\n  });\n};\nexport default function Login() {\n  _s();\n  const actionData = useActionData();\n  const loaderData = useLoaderData();\n  const [searchParams] = useSearchParams();\n  const urlMessage = searchParams.get(\"message\");\n  return <div className=\"max-w-xl mx-auto p-4\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Login</h1>\r\n\r\n      {loaderData.message && <div className={`mb-4 p-3 rounded ${loaderData.message.toLowerCase().includes(\"logged out\") ? \"bg-red-100 text-red-700\" : \"bg-green-100 text-green-700\"}`}>\r\n    {loaderData.message}\r\n  </div>}\r\n\r\n\r\n      {actionData?.error && <div className=\"mb-4 p-3 bg-red-100 text-red-700 rounded\">\r\n          {actionData.error}\r\n        </div>}\r\n\r\n      {urlMessage && <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">\r\n          {urlMessage}\r\n        </div>}\r\n\r\n      <Form method=\"post\" className=\"space-y-4\">\r\n        <div>\r\n          <label>Email</label>\r\n          <input name=\"email\" type=\"email\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input name=\"password\" type=\"password\" required className=\"w-full border p-2 rounded\" />\r\n        </div>\r\n        <button className=\"bg-blue-600 text-white px-4 py-2 rounded\">Login</button>\r\n        <div className=\"mt-4 space-y-2\">\r\n          <p>\r\n            Don't have an account?{\" \"}\r\n            <a href=\"/register\" className=\"text-blue-600\">Register</a>\r\n          </p>\r\n          <p>\r\n            <a href=\"/forgot-password\" className=\"text-blue-600\">Forgot password?</a>\r\n          </p>\r\n        </div>\r\n      </Form>\r\n    </div>;\n}\n_s(Login, \"/Uyo/o64d1xJjXnuKzzT1WuUeRM=\", false, function () {\n  return [useActionData, useLoaderData, useSearchParams];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAC/B,qBAA6D;AAwDvD;AA9EN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAsDe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,YAAY,IAAI,gBAAgB;AACvC,QAAM,aAAa,aAAa,IAAI,SAAS;AAC7C,SAAO,mDAAC,SAAI,WAAU,wBAClB;AAAA,uDAAC,QAAG,WAAU,2BAA0B,qBAAxC;AAAA;AAAA;AAAA;AAAA,WAA6C;AAAA,IAE5C,WAAW,WAAW,mDAAC,SAAI,WAAW,oBAAoB,WAAW,QAAQ,YAAY,EAAE,SAAS,YAAY,IAAI,4BAA4B,iCAClJ,qBAAW,WADa;AAAA;AAAA;AAAA;AAAA,WAE3B;AAAA,IAGK,YAAY,SAAS,mDAAC,SAAI,WAAU,4CAChC,qBAAW,SADM;AAAA;AAAA;AAAA;AAAA,WAEpB;AAAA,IAED,cAAc,mDAAC,SAAI,WAAU,gDACzB,wBADU;AAAA;AAAA;AAAA;AAAA,WAEb;AAAA,IAEF,mDAAC,QAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,yDAAC,SACC;AAAA,2DAAC,WAAM,qBAAP;AAAA;AAAA;AAAA;AAAA,eAAY;AAAA,QACZ,mDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,UAAQ,MAAC,WAAU,+BAApD;AAAA;AAAA;AAAA;AAAA,eAAgF;AAAA,WAFlF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,SACC;AAAA,2DAAC,WAAM,wBAAP;AAAA;AAAA;AAAA;AAAA,eAAe;AAAA,QACf,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,UAAQ,MAAC,WAAU,+BAA1D;AAAA;AAAA;AAAA;AAAA,eAAsF;AAAA,WAFxF;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,mDAAC,YAAO,WAAU,4CAA2C,qBAA7D;AAAA;AAAA;AAAA;AAAA,aAAkE;AAAA,MAClE,mDAAC,SAAI,WAAU,kBACb;AAAA,2DAAC,OAAE;AAAA;AAAA,UACsB;AAAA,UACvB,mDAAC,OAAE,MAAK,aAAY,WAAU,iBAAgB,wBAA9C;AAAA;AAAA;AAAA;AAAA,iBAAsD;AAAA,aAFxD;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QACA,mDAAC,OACC,6DAAC,OAAE,MAAK,oBAAmB,WAAU,iBAAgB,gCAArD;AAAA;AAAA;AAAA;AAAA,eAAqE,KADvE;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,SAlBF;AAAA;AAAA;AAAA;AAAA,WAmBA;AAAA,OAnCG;AAAA;AAAA;AAAA;AAAA,SAoCL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,eAAe,eAAe;AACvD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
